# frama-c -wp [...]
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/wp_plugin/call.i (no preprocessing)
[wp] Running WP plugin...
[wp] Loading driver 'share/wp.driver'
[wp] Collecting axiomatic usage
[wp] warning: Missing RTE guards
------------------------------------------------------------
  Function main
------------------------------------------------------------

Goal Post-condition (file tests/wp_plugin/call.i, line 17) in 'main':
Assume {
  Type: is_sint32(main_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Residual *)
  When: y <= x.
  If y < x
  Then { (* Call 'job' *) Have: 0 < main_0. }
  Else { Have: 0 = main_0. }
}
Prove: 0 <= main_0.

------------------------------------------------------------

Goal Assigns nothing in 'main':
Prove: true.

------------------------------------------------------------

Goal Assigns nothing in 'main' (1/6):
Prove: true.

------------------------------------------------------------

Goal Assigns nothing in 'main' (2/6):
Call Result at line 28
Assume {
  Type: is_sint32(job_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Then *)
  Have: x < y.
  (* Call 'job' *)
  Have: 0 < job_0.
}
Prove: true.

------------------------------------------------------------

Goal Assigns nothing in 'main' (3/6):
Effect at line 28
Assume {
  Type: is_sint32(job_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Then *)
  Have: x < y.
  (* Call 'job' *)
  Have: 0 < job_0.
}
Prove: true.

------------------------------------------------------------

Goal Assigns nothing in 'main' (4/6):
Call Result at line 29
Assume {
  Type: is_sint32(job_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Else *)
  Have: y <= x.
  (* Then *)
  Have: y < x.
  (* Call 'job' *)
  Have: 0 < job_0.
}
Prove: true.

------------------------------------------------------------

Goal Assigns nothing in 'main' (5/6):
Effect at line 29
Assume {
  Type: is_sint32(job_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Else *)
  Have: y <= x.
  (* Then *)
  Have: y < x.
  (* Call 'job' *)
  Have: 0 < job_0.
}
Prove: true.

------------------------------------------------------------

Goal Assigns nothing in 'main' (6/6):
Effect at line 30
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Else *)
  Have: y <= x.
  (* Else *)
  Have: x <= y.
}
Prove: true.

------------------------------------------------------------

Goal Instance of 'Pre-condition (file tests/wp_plugin/call.i, line 13) in 'job'' in 'main' at call 'job' (file tests/wp_plugin/call.i, line 28)
:
Assume { Type: is_sint32(x) /\ is_sint32(y). (* Then *) Have: x < y. }
Prove: true.

------------------------------------------------------------

Goal Instance of 'Pre-condition (file tests/wp_plugin/call.i, line 13) in 'job'' in 'main' at call 'job' (file tests/wp_plugin/call.i, line 29)
:
Assume {
  Type: is_sint32(x) /\ is_sint32(y).
  (* Else *)
  Have: y <= x.
  (* Then *)
  Have: y < x.
}
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function main with behavior A
------------------------------------------------------------

Goal Post-condition for 'A' (file tests/wp_plugin/call.i, line 21) in 'main':
Assume {
  Type: is_sint32(main_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition for 'A' *)
  Have: x < y.
  (* Call 'job' *)
  Have: 0 < main_0.
}
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function main with behavior B
------------------------------------------------------------

Goal Post-condition for 'B' (file tests/wp_plugin/call.i, line 24) in 'main':
Assume {
  Type: is_sint32(main_0) /\ is_sint32(x) /\ is_sint32(y).
  (* Pre-condition for 'B' *)
  Have: y < x.
  (* Call 'job' *)
  Have: 0 < main_0.
}
Prove: true.

------------------------------------------------------------
