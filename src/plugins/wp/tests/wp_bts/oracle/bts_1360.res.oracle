# frama-c -wp -wp-rte [...]
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/wp_bts/bts_1360.i (no preprocessing)
[wp] Running WP plugin...
[wp] Loading driver 'share/wp.driver'
[wp] Collecting axiomatic usage
[rte] annotating function foo_correct
[rte] annotating function foo_wrong
------------------------------------------------------------
  Function foo_correct
------------------------------------------------------------

Goal Post-condition (file tests/wp_bts/bts_1360.i, line 24) in 'foo_correct':
Let x = Mint_0[a].
Let x_1 = Mint_0[b].
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(land(x, x_1)).
  (* Heap *)
  Have: linked(Malloc_0) /\ (region(a.base) <= 0) /\ (region(b.base) <= 0).
  (* Pre-condition *)
  Have: valid_rd(Malloc_0, b, 1) /\ valid_rw(Malloc_0, a, 1).
  (* Pre-condition *)
  Have: a != b.
  (* Assertion 'rte,mem_access' *)
  Have: valid_rd(Malloc_0, a, 1).
}
Prove: true.

------------------------------------------------------------

Goal Assertion 'rte,mem_access' (file tests/wp_bts/bts_1360.i, line 29):
Assume {
  Type: is_sint32(Mint_0[a]) /\ is_sint32(Mint_0[b]) /\
      is_sint32(Mint_1[a]) /\ is_sint32(Mint_2[a]) /\ is_sint32(Mint_2[b]).
  (* Heap *)
  Have: linked(Malloc_0) /\ (region(a.base) <= 0) /\ (region(b.base) <= 0).
  (* Pre-condition *)
  Have: valid_rd(Malloc_0, b, 1) /\ valid_rw(Malloc_0, a, 1).
  (* Pre-condition *)
  Have: a != b.
}
Prove: valid_rd(Malloc_0, a, 1).

------------------------------------------------------------

Goal Assertion 'rte,mem_access' (file tests/wp_bts/bts_1360.i, line 29):
Assume {
  Type: is_sint32(Mint_0[a]) /\ is_sint32(Mint_0[b]) /\
      is_sint32(Mint_1[a]) /\ is_sint32(Mint_2[a]) /\ is_sint32(Mint_2[b]).
  (* Heap *)
  Have: linked(Malloc_0) /\ (region(a.base) <= 0) /\ (region(b.base) <= 0).
  (* Pre-condition *)
  Have: valid_rd(Malloc_0, b, 1) /\ valid_rw(Malloc_0, a, 1).
  (* Pre-condition *)
  Have: a != b.
}
Prove: true.

------------------------------------------------------------

Goal Assertion 'rte,mem_access' (file tests/wp_bts/bts_1360.i, line 30):
Assume {
  Type: is_sint32(Mint_0[a]) /\ is_sint32(Mint_0[b]) /\
      is_sint32(Mint_1[a]) /\ is_sint32(Mint_2[a]) /\ is_sint32(Mint_2[b]).
  (* Heap *)
  Have: linked(Malloc_0) /\ (region(a.base) <= 0) /\ (region(b.base) <= 0).
  (* Pre-condition *)
  Have: valid_rd(Malloc_0, b, 1) /\ valid_rw(Malloc_0, a, 1).
  (* Pre-condition *)
  Have: a != b.
  (* Assertion 'rte,mem_access' *)
  Have: valid_rd(Malloc_0, a, 1).
}
Prove: true.

------------------------------------------------------------

Goal Assigns (file tests/wp_bts/bts_1360.i, line 25) in 'foo_correct' (1/2):
Effect at line 29
Assume {
  Type: is_sint32(Mint_0[a]) /\ is_sint32(Mint_0[b]) /\
      is_sint32(Mint_1[a]) /\ is_sint32(Mint_2[a]) /\ is_sint32(Mint_2[b]).
  (* Heap *)
  Have: linked(Malloc_0) /\ (region(a.base) <= 0) /\ (region(b.base) <= 0).
  (* Pre-condition *)
  Have: valid_rd(Malloc_0, b, 1) /\ valid_rw(Malloc_0, a, 1).
  (* Pre-condition *)
  Have: a != b.
  (* Assertion 'rte,mem_access' *)
  Have: valid_rd(Malloc_0, a, 1).
}
Prove: true.

------------------------------------------------------------

Goal Assigns (file tests/wp_bts/bts_1360.i, line 25) in 'foo_correct' (2/2):
Effect at line 30
Assume {
  Type: is_sint32(Mint_0[a]) /\ is_sint32(Mint_0[b]) /\
      is_sint32(Mint_1[a]) /\ is_sint32(Mint_2[a]) /\ is_sint32(Mint_2[b]).
  (* Goal *)
  When: valid_rd(Malloc_0, a, 1).
  (* Heap *)
  Have: linked(Malloc_0) /\ (region(a.base) <= 0) /\ (region(b.base) <= 0).
  (* Pre-condition *)
  Have: valid_rd(Malloc_0, b, 1) /\ valid_rw(Malloc_0, a, 1).
  (* Pre-condition *)
  Have: a != b.
}
Prove: true.

------------------------------------------------------------
------------------------------------------------------------
  Function foo_wrong
------------------------------------------------------------

Goal Post-condition (file tests/wp_bts/bts_1360.i, line 13) in 'foo_wrong':
Let x = Mint_0[a].
Let x_1 = Mint_0[b].
Assume {
  Type: is_sint32(x) /\ is_sint32(x_1) /\ is_sint32(land(x, x_1)).
  (* Heap *)
  Have: linked(Malloc_0) /\ (region(a.base) <= 0) /\ (region(b.base) <= 0).
  (* Pre-condition *)
  Have: valid_rd(Malloc_0, a, 1) /\ valid_rd(Malloc_0, b, 1).
  (* Pre-condition *)
  Have: a != b.
  (* Assertion 'rte,mem_access' *)
  Have: valid_rw(Malloc_0, a, 1).
}
Prove: true.

------------------------------------------------------------

Goal Assertion 'rte,mem_access' (file tests/wp_bts/bts_1360.i, line 18):
Assume {
  Type: is_sint32(Mint_0[a]) /\ is_sint32(Mint_0[b]) /\
      is_sint32(Mint_1[a]) /\ is_sint32(Mint_2[a]) /\ is_sint32(Mint_2[b]).
  (* Heap *)
  Have: linked(Malloc_0) /\ (region(a.base) <= 0) /\ (region(b.base) <= 0).
  (* Pre-condition *)
  Have: valid_rd(Malloc_0, a, 1) /\ valid_rd(Malloc_0, b, 1).
  (* Pre-condition *)
  Have: a != b.
}
Prove: true.

------------------------------------------------------------

Goal Assertion 'rte,mem_access' (file tests/wp_bts/bts_1360.i, line 18):
Assume {
  Type: is_sint32(Mint_0[a]) /\ is_sint32(Mint_0[b]) /\
      is_sint32(Mint_1[a]) /\ is_sint32(Mint_2[a]) /\ is_sint32(Mint_2[b]).
  (* Heap *)
  Have: linked(Malloc_0) /\ (region(a.base) <= 0) /\ (region(b.base) <= 0).
  (* Pre-condition *)
  Have: valid_rd(Malloc_0, a, 1) /\ valid_rd(Malloc_0, b, 1).
  (* Pre-condition *)
  Have: a != b.
}
Prove: true.

------------------------------------------------------------

Goal Assertion 'rte,mem_access' (file tests/wp_bts/bts_1360.i, line 19):
Assume {
  Type: is_sint32(Mint_0[a]) /\ is_sint32(Mint_0[b]) /\
      is_sint32(Mint_1[a]) /\ is_sint32(Mint_2[a]) /\ is_sint32(Mint_2[b]).
  (* Heap *)
  Have: linked(Malloc_0) /\ (region(a.base) <= 0) /\ (region(b.base) <= 0).
  (* Pre-condition *)
  Have: valid_rd(Malloc_0, a, 1) /\ valid_rd(Malloc_0, b, 1).
  (* Pre-condition *)
  Have: a != b.
}
Prove: valid_rw(Malloc_0, a, 1).

------------------------------------------------------------

Goal Assigns (file tests/wp_bts/bts_1360.i, line 14) in 'foo_wrong' (1/2):
Effect at line 18
Assume {
  Type: is_sint32(Mint_0[a]) /\ is_sint32(Mint_0[b]) /\
      is_sint32(Mint_1[a]) /\ is_sint32(Mint_2[a]) /\ is_sint32(Mint_2[b]).
  (* Heap *)
  Have: linked(Malloc_0) /\ (region(a.base) <= 0) /\ (region(b.base) <= 0).
  (* Pre-condition *)
  Have: valid_rd(Malloc_0, a, 1) /\ valid_rd(Malloc_0, b, 1).
  (* Pre-condition *)
  Have: a != b.
}
Prove: true.

------------------------------------------------------------

Goal Assigns (file tests/wp_bts/bts_1360.i, line 14) in 'foo_wrong' (2/2):
Effect at line 19
Assume {
  Type: is_sint32(Mint_0[a]) /\ is_sint32(Mint_0[b]) /\
      is_sint32(Mint_1[a]) /\ is_sint32(Mint_2[a]) /\ is_sint32(Mint_2[b]).
  (* Goal *)
  When: valid_rd(Malloc_0, a, 1).
  (* Heap *)
  Have: linked(Malloc_0) /\ (region(a.base) <= 0) /\ (region(b.base) <= 0).
  (* Pre-condition *)
  Have: valid_rd(Malloc_0, b, 1).
  (* Pre-condition *)
  Have: a != b.
  (* Assertion 'rte,mem_access' *)
  Have: valid_rw(Malloc_0, a, 1).
}
Prove: true.

------------------------------------------------------------
